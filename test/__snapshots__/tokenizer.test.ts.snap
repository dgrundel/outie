// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`outie tokenizer should correctly identify include tokens 1`] = `
Array [
  ModelKeyToken {
    "content": "greeting",
  },
  RawToken {
    "content": " ",
  },
  ModelKeyToken {
    "content": "name",
  },
  RawToken {
    "content": " ",
  },
  IncludeToken {
    "content": "some.file.html.outie",
  },
]
`;

exports[`outie tokenizer should correctly identify raw tokens 1`] = `
Array [
  ModelKeyToken {
    "content": "greeting",
  },
  RawToken {
    "content": " ",
  },
  ModelKeyToken {
    "content": "name",
  },
  RawToken {
    "content": " ",
  },
  RawModelKeyToken {
    "content": "someHtml",
  },
]
`;

exports[`outie tokenizer should handle a string with a token at end 1`] = `
Array [
  RawToken {
    "content": "hello ",
  },
  ModelKeyToken {
    "content": "token",
  },
]
`;

exports[`outie tokenizer should handle a string with a token at start 1`] = `
Array [
  ModelKeyToken {
    "content": "greeting",
  },
  RawToken {
    "content": " name!",
  },
]
`;

exports[`outie tokenizer should handle a string with only a single token 1`] = `
Array [
  ModelKeyToken {
    "content": "token",
  },
]
`;

exports[`outie tokenizer should handle a string with tokens at start and end 1`] = `
Array [
  ModelKeyToken {
    "content": "greeting",
  },
  RawToken {
    "content": " ",
  },
  ModelKeyToken {
    "content": "name",
  },
]
`;

exports[`outie tokenizer should tokenize a simple token 1`] = `
Array [
  RawToken {
    "content": "Hello, ",
  },
  ModelKeyToken {
    "content": "name",
  },
  RawToken {
    "content": "!",
  },
]
`;
